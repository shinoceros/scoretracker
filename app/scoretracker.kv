#:import SoundManager soundmanager.SoundManager
#:import Trigger soundmanager.Trigger
#:import settings settings
#:import icons icons
#:import rgba kivy.utils.get_color_from_hex
#:import Factory kivy.factory.Factory

#:set color_dark_100    (0.000, 0.020, 0.000, 1.000) # rgba('000500FF')
#:set color_dark_95     (0.000, 0.020, 0.000, 0.950) # rgba('000500F3')
#:set color_white_100   (1.000, 1.000, 1.000, 1.000) # rgba('FFFFFFFF')
#:set color_white_80    (1.000, 1.000, 1.000, 0.800) # rgba('FFFFFFCC')
#:set color_white_2     (1.000, 1.000, 1.000, 0.020) # rgba('FFFFFF05')
#:set color_transparent (0.000, 0.000, 0.000, 0.000) # rgba('00000000')
#:set color_orange_12   (0.800, 0.733, 0.125, 0.125) # rgba('CCBB2020')
#:set color_orange_100  (0.800, 0.733, 0.125, 1.000) # rgba('CCBB20FF')
#:set color_red_12      (1.000, 0.000, 0.000, 0.188) # rgba('FF000030')
#:set color_blue_12     (0.000, 0.000, 1.000, 0.188) # rgba('0000FF30')
#:set color_dragging    (0.040, 0.450, 0.500, 1.000)
#:set color_blueish_90  (0.187, 0.637, 0.875, 0.900) # rgba('30A3E0E6')
#:set color_disconnected (0.400, 0.350, 0.350, 1.000)
#:set color_connected   (0.000, 1.000, 0.000, 1.000)


<Label>:
	font_name: settings.KIVY_DEFAULT_FONT

<BackgroundScreenManager>:

<BaseScreen>:
	canvas.before:
		Color:
			rgba: color_white_100
		BorderImage:
			source: './assets/images/bg-ui.png'
			pos: self.pos
			size: self.size
		Color:
			rgba: color_white_100


<ButtonSound>:
	sound:
	on_press: SoundManager.play(self.sound)


<StandardButton@SoundButton>:
	sound: Trigger.BUTTON


<MenuButton@SoundButton>:
	menuIcon: ''
	menuText: ''
	sound: Trigger.BUTTON

	background_color: 1, 0.9, 0.8, 0.8
	background_normal: './assets/images/roundedbutton.png'
	border: 20, 20, 20, 20

	BoxLayout:
		pos: self.parent.pos
		size: self.parent.size
		orientation: 'vertical'
		padding: 30
		spacing: 10
		IconLabel:
			text: root.menuIcon
			font_size: 130
			color: color_white_100
			size_hint_y: 0.8
		Label:
			font_size: 40
			bold: True
			text: root.menuText
			size_hint_y: 0.2


<MenuScreen>:
	duration: 1.5
	animate_properties: ['fadeopacity']
	transition: 'out_cubic'

	canvas.after:
		Color:
			rgba: 0, 0, 0, root.fadeopacity
		Rectangle:
			pos: self.pos
			size: self.size

	BoxLayout:
		orientation: 'vertical'

		GridLayout:
			cols: 3
			padding: 25
			spacing: 25
			MenuButton:
				menuText: 'Einstellungen'
				menuIcon: icons.wrench
				on_press: root.manager.current = 'settings'
			MenuButton:
				menuText: 'RFID Setup'
				menuIcon: icons.wifi
				on_press: root.manager.current = 'rfid-setup'
			MenuButton:
				menuText: 'Neues Spiel'
				menuIcon: icons.rocket
				on_press: root.manager.current = 'lounge'
			MenuButton:
				menuText: 'Aus'
				menuIcon: icons.power
				sound: Trigger.EXIT
				on_press: root.shutdown()

		StackLayout:
			canvas.before:
				Color:
					rgba: color_dark_95
				Rectangle:
					pos:  self.pos
					size: self.size

			size_hint_y: 0.1
			orientation: 'lr-tb'
			padding: 13
			IconLabel:
				text: icons.wifi
				font_size: 25
				color: color_white_100
				width: 60
				size_hint: (None, 1.0)
			Label:
				text: root.network_str
				font_size: 25
				color: color_white_100
				size_hint: (None, 1.0)
				text_size: self.size
				width: 800

<IconButton>:
	iconLeft: True
	iconSize: 25
	iconRatio: 0.3
	iconText: ''
	iconColor: (1, 0.9, 0.8, 0.8)
	iconColorDisabled: (0.8, 0.8, 0.8, 0.8)
	sound: Trigger.BUTTON

	background_color: self.iconColor if not self.disabled else self.iconColorDisabled
	background_normal: './assets/images/roundedbutton.png'
	background_down: './assets/images/roundedbutton.png'
	background_disabled_normal: './assets/images/roundedbutton.png'
	border: 20, 20, 20, 20

	StackLayout:
		pos: self.parent.pos
		size: self.parent.size
		orientation: 'lr-tb' if root.iconLeft else 'rl-tb'
		padding: 10
		IconLabel:
			canvas.before:
				PushMatrix
				Rotate:
					angle: root.icon_angle
					axis: 0, 0, 1
					origin: self.center
			canvas.after:
				PopMatrix
			text: root.icon
			font_size: root.iconSize
			color: color_white_100
			size_hint_x: root.iconRatio if root.icon and root.iconText else 1.0 if root.icon and not root.iconText else None
			size: (0, 0)
		Label:
			text: root.iconText
			halign: 'center'
			font_size: root.iconSize
			size_hint_x: 1.0 - root.iconRatio if root.iconText and root.icon else 1.0 if root.iconText and not root.icon else None
			size: (0, 0)

<TopBar>:
	title: ''
	customtext: ''
	hasBack: True
	hasNext: False
	isBackEnabled: True
	isNextEnabled: False
	width_button: 165.0
	customlabel: customlabel
	rect_x: self.x + (root.width_button if root.hasBack else 0.0)
	rect_y: self.y + 10.0
	rect_w:  self.width - (root.width_button if root.hasBack else 0) - (root.width_button if root.hasNext else 0)
	rect_h:  self.height - 20
	on_touch_down: root.handle_touch_down(args[1])
	on_touch_up:   root.handle_touch_up(args[1])

	canvas.before:
		Color:
			rgba: 0.5, 0.45, 0.4, 0.8
		Rectangle:
			source: './assets/images/bg-title.png'
			pos:  [self.rect_x, self.rect_y]
			size: [self.rect_w, self.rect_h]

	size_hint_y: 0.20
	orientation: 'horizontal'
	# back button
	IconButton:
		iconLeft: True
		icon: icons.back
		iconSize: 30
		iconText: u'Zurück'
		sound: Trigger.BACK
		disabled: not root.isBackEnabled
		on_press: root.parent.parent.on_back()
		opacity: (1.0 if root.hasBack else 0.0)
		size_hint_x: 0.175
	# title + network info
	AnchorLayout:
		anchor_x: 'center'
		anchor_y: 'center'
		size_hint_x: 0.65
		Label:
			text: root.title
			font_size: 35
			bold: True
			color: color_white_100
			size_hint_x: 1
		AnchorLayout:
			anchor_x: 'right'
			anchor_y: 'center'
			Button:
				id: btn_network
				size_hint_x: 0.25
				background_color: (0,0,0,0)
				on_release: root.network_btn_pressed()
				StackLayout:
					pos: self.parent.pos
					size: self.parent.size
					IconLabel:
						text: icons.wifi
						font_size: 35
						bold: True
						color: color_connected if root.network_info['connected'] else color_disconnected
	AnchorLayout:
		anchor_x: 'right'
		anchor_y: 'center'
		size_hint_x: 0.175
		IconButton:
			iconLeft: False
			icon: icons.next
			iconSize: 30
			iconText: 'Weiter'
			disabled: not root.isNextEnabled
			on_press: root.parent.parent.on_next()
			opacity: 1.0 if root.hasNext else 0.0
		Label:
			id: customlabel
			text: root.customtext
			bold: True
			font_size: 30
			color: color_white_100
			opacity: 0.0 if root.hasNext else 1.0


<SubPageLayout@BoxLayout>:
	orientation: 'vertical'
	spacing: 10
	padding: 25

<PlayerButton>:
	text: self.data.get('name', '???')
	font_size: 30
	size_hint_y: None
	height: 60

	background_color: (0.2, 0.2, 0.1, 1)


<RfidSetupScreen>:
	iconRfid: iconRfid
	btnPlayer: btnPlayer
	btnAccept: btnAccept
	btnClear: btnClear
	btnUpdate: btnUpdate

	SubPageLayout:
		TopBar:
			id: topbar
		BoxLayout:
			canvas.before:
				Color:
					rgba: color_dark_95
				Rectangle:
					pos: self.pos
					size: self.size
				Color:
					rgba: color_white_100

			padding: 20
			orientation: 'vertical'
			GridLayout:
				row_force_default: True
				row_default_height: 70
				cols: 2
				spacing: 30
				Label:
					text: 'Eingetragene Spieler: [b]%d[/b]' % root.num_players
					font_size: '25sp'
					markup: True

				IconButton:
					id: btnUpdate
					icon: icons.cloud_download
					iconText: 'aktualisieren'
					iconSize: 25
					on_press: root.update_players_list()
					size_hint_x: 0.35

			GridLayout:
				rows: 1
				spacing: 10
				IconLabel:
					id: iconRfid
					text: icons.wifi
					font_size: 100
					color: color_orange_100 if root.teaching else color_blueish_90
					size_hint_x: 0.2
				BoxLayout:
					padding: 0
					spacing: 0
					orientation: 'vertical'
					size_hint_x: 0.20
					Label:
						text: 'RFID:'
						bold: True
						font_size: 40
					Label:
						text: 'Spieler'
						bold: True
						font_size: 40
				BoxLayout:
					padding: 0
					spacing: 10
					orientation: 'vertical'
					size_hint_x: 0.40
					Label:
						text: root.current_rfid if root.current_rfid else '---'
						font_size: 40
					IconButton:
						id: btnPlayer
						on_release: root.dropdown_player.open(self)
						icon: ''
						iconText: u'---'
						iconSize: 40
						iconColor: (1, 1, 1, 0.3)
						iconColorDisabled: (0.8, 0.8, 0.8, 0.3)
						disabled: True
				BoxLayout:
					padding: 0
					spacing: 10
					orientation: 'vertical'
					size_hint_x: 0.1
					IconButton:
						id: btnAccept
						icon: icons.check
						iconSize: 40
						on_press: root.add_entry()
						disabled: True
					IconButton:
						id: btnClear
						icon: icons.remove
						iconSize: 40
						on_press: root.confirm_remove()
						disabled: True


<SettingsScreen>:
	volslider: volslider
	SubPageLayout:
		TopBar:
			id: topbar
		GridLayout:
			canvas.before:
				Color:
					rgba: color_dark_95
				Rectangle:
					pos: self.pos
					size: self.size
				Color:
					rgba: color_white_100
			cols: 2
			padding: 30
			spacing: 10
			Label:
				text: 'Volume'
				font_size: 40
				size_hint_x: 0.3
				size_hint_y: None
				height: 50
			Slider:
				id: volslider
				min: 0
				max: 100
				value: root.volume
				step: 1


<WaitingOverlay>:
	duration: 1.0
	animate_properties: ['opacity']
	transition: 'out_cubic'
	canvas:
		Color:
			rgba: 0.1, 0.1, 0.1, 0.95
		Rectangle:
			pos: self.pos
			size: self.size
	BoxLayout:
		pos: root.pos
		size: root.size
		orientation: 'vertical'
		padding: 0, 150
		IconLabel:
			text: icons.refresh
			font_size: '80sp'
			color: color_white_100
			canvas.before:
				PushMatrix
				Rotate:
					angle: root.angle
					axis: 0, 0, 1
					origin: self.center
			canvas.after:
				PopMatrix

		Label:
			text: root.text + ('.' * root.dots_count) + (' ' * (3 - root.dots_count))
			font_size: 30


<PlayerSlot@SoundButton>:
	playerName: ''
	playerElo: ''
	iconText: ''
	iconLeft: True
	active: False
	dragging: False

    sound: Trigger.BUTTON
	background_normal: ''
	background_down: ''
	background_color: 0, 0, 0, 0
	border: 0, 0, 0, 0

	StackLayout:
		pos: self.parent.pos
		size: self.parent.size
		orientation: 'lr-tb' if root.iconLeft else 'rl-tb'
		padding: 10
		# active highlight
		canvas:
			Color:
				rgba: color_dragging if root.dragging else color_orange_12 if root.active else color_white_2
			Rectangle:
				pos: self.pos
				size: self.size
#			Color:
#				rgba: color_white_100
		IconPlayerSlot:
			id: icon
			size_hint_x: 0.25
			text: root.iconText
			active: root.active
		BoxLayout:
			size_hint_x: 0.6
			orientation: 'vertical'
			spacing: 5
			Label:
				id: playerName
				text: root.playerName
				font_size: 55
				bold: True
				size_hint_y: 0.7
			Label:
				text: root.playerElo
				font_size: 25
				bold: False
				size_hint_y: 0.3

<MatchPlayerLabel@StackLayout>:
	icon: icon
	playerName: ''
	iconText: ''
	iconLeft: True
	highlight: False

	StackLayout:
		pos: self.parent.pos
		size: self.parent.size
		orientation: 'lr-tb' if root.iconLeft else 'rl-tb'
		padding: 10
		# TODO: winner highlight
		canvas:
			Color:
				rgba: color_orange_12 if root.highlight else (0, 0, 0, 0)
			Rectangle:
				pos: self.pos
				size: self.size
			Color:
				rgba: color_white_100
		IconLabel:
			id: icon
			size_hint_x: 0.3
			text: root.iconText
			font_size: 30
		Label:
			size_hint_x: 0.6
			text: root.playerName
			font_size: 30
			bold: True
			size_hint_y: 0.7

<TeamLabel@StackLayout>:
	labelText: ''
	labelColor: (0, 0, 0, 0)
	iconLeft: True
	teamid: 0

	orientation: 'lr-tb' if root.iconLeft else 'rl-tb'
	canvas.before:
		Color:
			rgba: root.labelColor
		Rectangle:
			pos: self.pos
			size: self.size
		Color:
			rgba: color_white_100
	padding: (20, 20)
	# team label
	Label:
		text: root.labelText
		bold: True
		font_size: 30
		size_hint_x: 1.0

<LoungeScreen>:
	SubPageLayout:
		TopBar:
			id: topbar
		GridLayout:
			canvas.before:
				Color:
					rgba: color_dark_95
				Rectangle:
					pos: self.pos
					size: self.size
				Color:
					rgba: color_white_100
			cols: 2
			padding: 20
			spacing: 10
			on_touch_down: root.handle_slot_touch_down(args[1])
			on_touch_move: root.handle_slot_touch_move(args[1])
			on_touch_up:   root.handle_slot_touch_up(args[1])
			TeamLabel:
				labelText: 'Team 1'
				labelColor: color_red_12
				iconLeft: True
				teamid: 0
				size_hint_y: 0.15
			TeamLabel:
				labelText: 'Team 2'
				labelColor: color_blue_12
				iconLeft: False
				teamid: 1
				size_hint_y: 0.15
			PlayerSlot:
				myid: 0
				id: p0
				active: root.current_player_slot == self.myid
				dragging: (root.dragging and (root.drag_start_id == self.myid or root.drag_stop_id == self.myid))
				playerName: root.players[self.myid].get('name', '---')
				playerElo: root.players[self.myid].get('elo', '')
				iconText: icons.attacker
				iconLeft: True
				size_hint_y: 0.3
			PlayerSlot:
				myid: 2
				id: p2
				active: root.current_player_slot == self.myid
				dragging: root.dragging and (root.drag_start_id == self.myid or root.drag_stop_id == self.myid)
				playerName: root.players[self.myid].get('name', '---')
				playerElo: root.players[self.myid].get('elo', '')
				iconText: icons.attacker
				iconLeft: False
				size_hint_y: 0.3
			PlayerSlot:
				myid: 1
				id: p1
				active: root.current_player_slot == self.myid
				dragging: root.dragging and (root.drag_start_id == self.myid or root.drag_stop_id == self.myid)
				playerName: root.players[self.myid].get('name', '---')
				playerElo: root.players[self.myid].get('elo', '')
				iconText: icons.defender
				iconLeft: True
				size_hint_y: 0.3
			PlayerSlot:
				myid: 3
				id: p3
				active: root.current_player_slot == self.myid
				dragging: root.dragging and (root.drag_start_id == self.myid or root.drag_stop_id == self.myid)
				playerName: root.players[self.myid].get('name', '---')
				playerElo: root.players[self.myid].get('elo', '')
				iconText: icons.defender
				iconLeft: False
				size_hint_y: 0.3
			AnchorLayout:
				size_hint_y: 0.15
				anchor_x: 'right'
				IconButton:
					size_hint_x: 0.4
					iconLeft: True
					iconText: 'mischen'
					icon: icons.random
					iconRatio: 0.3
					disabled: False if root.allPlayersSet else True
					on_press: root.randomize_players()
			AnchorLayout:
				size_hint_y: 0.2
				anchor_x: 'left'
				IconButton:
					size_hint_x: 0.4
					iconLeft: True
					iconText: 'ausgleichen'
					icon: icons.balance
					iconRatio: 0.3
					disabled: True


<ScoreLabel@Label>:
	font_name: 'ElectronicHighwaySign'
	font_size: '350sp'


<IconLabel@Label>:
	font_name: 'FontAwesome'


<IconPlayerSlot@IconLabel>:
	active: False
	font_size: 70
	color: color_orange_100 if root.active else color_white_100


<MatchScreen>:
	btnSubmit: btnSubmit
	player0: player0
	player1: player1
	player2: player2
	player3: player3

	on_touch_down: root.handle_score_touch_down(args[1])
	on_touch_move: root.handle_score_touch_move(args[1])
	on_touch_up: root.handle_score_touch_up(args[1])
	SubPageLayout:
		TopBar:
			id: topbar
		# Score Board
		BoxLayout:
			orientation: 'vertical'
			padding: 20, 20
			canvas.before:
				Color:
					rgba: color_dark_95
				Rectangle:
					pos: self.pos
					size: self.size
				Color:
					rgba: color_white_100
			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: 0.8
				ScoreLabel:
					canvas.before:
						Color:
							rgba: 1,0,0,0.2
#						Rectangle:
#							pos: self.pos
#							size: self.size
						Color:
							rgba: color_white_100
					id: labelHome
					text: str(root.score[0])
					size_hint_x: 0.425
					padding: (0, 15)
				ScoreLabel:
					canvas.before:
						Color:
							rgba: 1,1,0,0.2
#						Rectangle:
#							pos: self.pos
#							size: self.size
						Color:
							rgba: color_white_100
					text: ':'
					size_hint_x: 0.15
					padding: (-15, 15)
				ScoreLabel:
					canvas.before:
						Color:
							rgba: 1,0,1,0.2
#						Rectangle:
#							pos: self.pos
#							size: self.size
						Color:
							rgba: color_white_100
					id: labelAway
					text: str(root.score[1])
					size_hint_x: 0.425
					padding: (0, 15)

			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: 0.2

				# players 0, 1
				BoxLayout:
					orientation: 'vertical'
					size_hint_x: 0.35
					MatchPlayerLabel:
						id: player0
						playerName: root.players[0].get('name', '---')
						iconText: icons.attacker
						iconLeft: True
					MatchPlayerLabel:
						id: player1
						playerName: root.players[1].get('name', '---')
						iconText: icons.defender
						iconLeft: True
				# submit button / ELO result
				AnchorLayout:
					size_hint_x: 0.3
					FloatLayout:
#						pos: parent.pos
#						size: parent.size
						IconLabel:
							canvas.before:
								PushMatrix
								Rotate:
									angle: root.kickoff_angle
									axis: 0, 0, 1
									origin: self.center
							canvas.after:
								PopMatrix
							id: kickoff_ball
							text: icons.football
							color: color_white_100
							size_hint: (0.1, 0.1)
							pos: (self.parent.x + self.parent.width / 2.0, self.parent.y + self.parent.height)
							font_size: 40
							opacity: 1.0 if (root.state == 'running') else 0.0
					IconButton:
						id: btnSubmit
						iconColor: (0, 1, 0, 0.8) if root.state == 'submit_success' else (1, 0, 0, 0.8) if root.state == 'submit_failed' else (1, 0.8, 0.8, 0.8)
						iconColorDisabled: (0, 1, 0, 0.8) if root.state == 'submit_success' else (1, 0, 0, 0.8) if root.state == 'submit_failed' else (0.8, 0.8, 0.8, 0.8)
						iconLeft: True
						iconSize: 45
						iconText: ''
						on_press: root.submit_score()
						opacity: 0.0 if (root.state in ['', 'running', 'elo']) else 1.0
						disabled: root.state in ['', 'running', 'submitting', 'submit_success', 'elo']
					BoxLayout:
						ResultArrow:
							won: root.elo > 0.0
							opacity: 1.0 if (root.state == 'elo') else 0.0
						Label:
							text: "{:.1f}".format(abs(root.elo))
							font_size: 80
							bold: True
							opacity: 1.0 if (root.state == 'elo') else 0.0
						ResultArrow:
							won: root.elo < 0.0
							opacity: 1.0 if (root.state == 'elo') else 0.0

				# players 2, 3
				BoxLayout:
					orientation: 'vertical'
					size_hint_x: 0.35
					MatchPlayerLabel:
						id: player2
						playerName: root.players[2].get('name', '---')
						iconText: icons.attacker
						iconLeft: False
					MatchPlayerLabel:
						id: player3
						playerName: root.players[3].get('name', '---')
						iconText: icons.defender
						iconLeft: False


<ResultArrow@IconLabel>:
	won: True
	text: icons.caret_up if root.won else icons.caret_down
	font_size: 60
	color: (0, 1, 0, 1) if root.won else (1, 0, 0, 1)


<STModalView>:
	orientation: 'vertical'
	padding: 10
	spacing: 20
	Label:
		canvas.before:
			Color:
				rgba: 1, 0.8, 0.8, 0.5
			Rectangle:
				source: './assets/images/bg-title.png'
				pos: self.pos
				size: self.size
			Color:
				rgba: color_white_100
		text: root.title
		font_size: 30
		bold: True
		size_hint_y: 0.2
	Label:
		text: root.text
		font_size: 30
		size_hint_y: 0.5
	BoxLayout:
		orientation: 'horizontal'
		padding: 10
		spacing: 10
		size_hint_y: 0.3
		IconButton:
			icon: icons.check
			iconLeft: True
			iconSize: 30
			iconText: 'Ja'
			on_press: root.on_yes()
		IconButton:
			icon: icons.remove
			iconLeft: False
			iconSize: 30
			iconText: 'Nein'
			on_press: root.on_no()
